val Functions$Function4<SwitchItem, SwitchItem, SwitchItem, NumberItem, Void> adjustLightState =  [SwitchItem lightBulb, SwitchItem switchLightOnMotion, SwitchItem switchMotionState, NumberItem itemIluminationState |
    
	var shouldLightTurnOn =  (lightBulb.state == OFF) &&
							 (SunLight.state == OFF) &&
							 (switchLightOnMotion.state == ON) &&
							 (switchMotionState.state == ON) &&
							 (itemIluminationState.state < 9)
							 
							 
	var shouldLightTurnOff = (switchLightOnMotion.state == ON) &&
							 (lightBulb.state == ON) &&
							 (switchMotionState.state == OFF)
							 
	logInfo("motion.rules", "shouldLightTurnOn: "  + shouldLightTurnOn);
	logInfo("motion.rules", "shouldLightTurnOff: " + shouldLightTurnOff);
	
	if (shouldLightTurnOn)
	{
		sendCommand(lightBulb, ON)
	}
	
	if (shouldLightTurnOff)
	{
		sendCommand(lightBulb, OFF)
	}
]


rule "Motion Sensor - Sala de Jantar"
when
    Item motion_sensor_sala_jantar_motion changed or
	Item motion_sensor_sala_jantar_illumination changed
then
	logInfo("motion.rules", "movimento - sala de jantar.");
	
	adjustLightState.apply(hue_sala_jantar_switch, EnableLightOnMotion_SalaDeJantar, motion_sensor_sala_jantar_motion, motion_sensor_sala_jantar_illumination);
end


rule "Motion Sensor - Quarto do Pedro"
when
    Item motion_sensor_quarto_pedro_motion changed or
	Item motion_sensor_quarto_pedro_illumination changed
then
	logInfo("motion.rules", "movimento - quarto do Pedro.");
	
	adjustLightState.apply(hue_quarto_pedro_switch, EnableLightOnMotion_QuartoPedro, motion_sensor_quarto_pedro_motion, motion_sensor_quarto_pedro_illumination);
end


rule "Motion Sensor - Sala de Estar"
when
    Item motion_sensor_sala_estar_motion changed or
	Item motion_sensor_sala_estar_illumination changed
then
	logInfo("motion.rules", "movimento - sala de Estar.");
	
	adjustLightState.apply(hue_sala_estar_switch, EnableLightOnMotion_SalaDeEstar, motion_sensor_sala_estar_motion, motion_sensor_sala_estar_illumination);
end