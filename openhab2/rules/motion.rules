val Functions$Function5<SwitchItem, SwitchItem, SwitchItem, NumberItem, Boolean> shouldLightTurnOn =  [SwitchItem lightBulb, SwitchItem switchLightOnMotion, SwitchItem switchMotionState, NumberItem itemIluminationState |	
	
	var canLightTurnOn = (lightBulb.state == OFF) &&
						 (switchLightOnMotion.state == ON) &&
						 (switchMotionState.state == ON) &&
						 (itemIluminationState.state < 9);
	
	var isDarkness = (itemIluminationState.state == 0);
	var isAfterSunSet = (SunLight.state == OFF);
	
	var shouldLightTurnOn =  (canLightTurnOn && isDarkness) || 
							 (canLightTurnOn && isAfterSunSet);
							 
	return shouldLightTurnOn;
]


val Functions$Function5<SwitchItem, SwitchItem, SwitchItem, Boolean> shouldLightTurnOff =  [SwitchItem lightBulb, SwitchItem switchLightOnMotion, SwitchItem switchMotionState |
							 
	var shouldLightTurnOff = (switchLightOnMotion.state == ON) &&
							 (lightBulb.state == ON) &&
							 (switchMotionState.state == OFF);
	
	return shouldLightTurnOff;
]


rule "Motion Sensor - Sala de Jantar"
when
    Item motion_sensor_sala_jantar_motion changed or
	Item motion_sensor_sala_jantar_illumination changed
then
	logDebug("motion.rules", "movimento - sala de jantar.");
	
	var turnLightOn = shouldLightTurnOn(");
	var turnLightOff = shouldLightTurnOff();
	
	var turnLightOn = shouldLightTurnOn(hue_sala_jantar_switch, EnableLightOnMotion_SalaDeJantar, motion_sensor_sala_jantar_motion, motion_sensor_sala_jantar_illumination);
	var turnLightOff = shouldLightTurnOff(hue_sala_jantar_switch, EnableLightOnMotion_SalaDeJantar, motion_sensor_sala_jantar_motion);
	
	if (turnLightOn)
	{
		sendCommand(hue_sala_jantar_switch, ON);
	}

	if (turnLightOff)
	{
		sendCommand(hue_sala_jantar_switch, OFF);
	}
end


rule "Motion Sensor - Quarto do Pedro"
when
    Item motion_sensor_quarto_pedro_motion changed or
	Item motion_sensor_quarto_pedro_illumination changed
then
	logDebug("motion.rules", "movimento - quarto do Pedro.");
	
	var turnLightOn = shouldLightTurnOn(hue_quarto_pedro_switch, EnableLightOnMotion_QuartoPedro, motion_sensor_quarto_pedro_motion, motion_sensor_quarto_pedro_illumination);
	var turnLightOff = shouldLightTurnOff(hue_quarto_pedro_switch, EnableLightOnMotion_QuartoPedro, motion_sensor_quarto_pedro_motion);
	
	if (turnLightOn)
	{
		sendCommand(hue_quarto_pedro_switch, ON);
	}

	if (turnLightOff)
	{
		sendCommand(hue_quarto_pedro_switch, OFF);
	}
end


rule "Motion Sensor - Sala de Estar"
when
    Item motion_sensor_sala_estar_motion changed or
	Item motion_sensor_sala_estar_illumination changed
then
	logDebug("motion.rules", "movimento - sala de Estar.");
	
	var turnLightOn = shouldLightTurnOn(hue_sala_estar_switch, EnableLightOnMotion_SalaDeEstar, motion_sensor_sala_estar_motion, motion_sensor_sala_estar_illumination);
	var turnLightOff = shouldLightTurnOff(hue_sala_estar_switch, EnableLightOnMotion_SalaDeEstar, motion_sensor_sala_estar_motion);
	
	if (turnLightOn)
	{
		sendCommand(hue_sala_estar_switch, ON);
	}

	if (turnLightOff)
	{
		sendCommand(hue_sala_estar_switch, OFF);
	}
end