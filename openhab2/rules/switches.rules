val Functions$Function2<SwitchItem, SwitchItem, Void> handleShortPress =  [SwitchItem lightBulbSwitch, SwitchItem toggleLightOnMotion |
	
	logDebug("switches.rules", "lightBulbSwitch.state: " + lightBulbSwitch.state);
	logDebug("switches.rules", "toggleLightOnMotion.state: " + toggleLightOnMotion.state);
	
	var shouldTurnLightOn = (lightBulbSwitch.state == OFF);
	
	var shouldTurnLightOff = (lightBulbSwitch.state == ON) && 
							 (toggleLightOnMotion.state == OFF);
							 
	var shouldDisableMotionControl = (lightBulbSwitch.state == ON) && 
									 (toggleLightOnMotion.state == ON);
									 
	logDebug("switches.rules", "shouldTurnLightOn: " + shouldTurnLightOn);
	logDebug("switches.rules", "shouldTurnLightOff: " + shouldTurnLightOff);
	logDebug("switches.rules", "shouldDisableMotionControl: " + shouldDisableMotionControl);
	
	if (shouldTurnLightOn)
	{
		sendCommand(lightBulbSwitch, ON)
		sendCommand(toggleLightOnMotion, OFF)
	}
	
	if (shouldTurnLightOff)
	{
		sendCommand(lightBulbSwitch, OFF)
	}
	
	if (shouldDisableMotionControl)
	{
		sendCommand(toggleLightOnMotion, OFF)
	}
]


val Functions$Function3<SwitchItem, DimmerItem, SwitchItem, Void> handleDoublePress =  [SwitchItem lightBulbSwitch, DimmerItem lightBulbDimmer, SwitchItem toggleLightOnMotion |
			
	var shouldDisableMotionControl = (lightBulbSwitch.state == OFF);
	var shouldSetMaxBrightness = (lightBulbSwitch.state == ON);
	
	if (shouldDisableMotionControl)
	{
		sendCommand(toggleLightOnMotion, OFF)
	}
	
	if (shouldSetMaxBrightness)
	{
		lightBulbDimmer.sendCommand(100);
	}
]

val Functions$Function1<DimmerItem, Void> handleLongPress =  [DimmerItem lightBulbDimmer |
			
	var newBrightness = lightBulbDimmer.state + 20;
			
	if (newBrightness > 100) {
		newBrightness = 20;
	}
	
	lightBulbDimmer.sendCommand(newBrightness)
]



rule "Hue - Quarto do Pedro"
when
    Channel "mihome:sensor_switch:158d00019de580:button" triggered
then
    var actionName = receivedEvent.getEvent()
	
    switch(actionName) {
	
        case "SHORT_PRESSED": {
			logDebug("switches.rules", "Short pressed switch_quarto_pedro");
			handleShortPress.apply(hue_quarto_pedro_switch, EnableLightOnMotion_QuartoPedro);
        }
		
        case "DOUBLE_PRESSED": {
			logDebug("switches.rules", "Double pressed switch_quarto_pedro");
			handleDoublePress.apply(hue_quarto_pedro_switch, hue_quarto_pedro_brightness, EnableLightOnMotion_QuartoPedro);
        }
		
        case "LONG_PRESSED": {
			logDebug("switches.rules", "Long pressed switch_quarto_pedro");
			handleLongPress.apply(hue_quarto_pedro_brightness);
        }
		
        case "LONG_RELEASED": {
        }
    }
end


rule "Hue - Sala de Jantar"
when
    Channel "mihome:sensor_switch:158d00019dcdda:button" triggered
then
    var actionName = receivedEvent.getEvent()
	
	switch(actionName) {
	
        case "SHORT_PRESSED": {
			logDebug("switches.rules", "Short pressed switch_sala_jantar");
			handleShortPress.apply(hue_sala_jantar_switch, EnableLightOnMotion_SalaDeJantar);
        }
		
        case "DOUBLE_PRESSED": {
			logDebug("switches.rules", "Double pressed switch_sala_jantar");
			handleDoublePress.apply(hue_sala_jantar_switch, hue_sala_jantar_brightness, EnableLightOnMotion_SalaDeJantar);
        }
		
        case "LONG_PRESSED": {
			logDebug("switches.rules", "Long pressed switch_sala_jantar");
			handleLongPress.apply(hue_sala_jantar_brightness);
        }
		
        case "LONG_RELEASED": {
        }
    }
end


rule "Hue - Sala de Estar"
when
    Channel "mihome:sensor_switch:158d00019dcc92:button" triggered
then
    var actionName = receivedEvent.getEvent()
	
    switch(actionName) {
	
        case "SHORT_PRESSED": {
			logDebug("switches.rules", "Short pressed switch_sala_estar");
			handleShortPress.apply(hue_sala_estar_switch, EnableLightOnMotion_SalaDeEstar);
        }
		
        case "DOUBLE_PRESSED": {
			logDebug("switches.rules", "Double pressed switch_sala_estar");
			handleDoublePress.apply(hue_sala_estar_switch, hue_sala_estar_brightness, EnableLightOnMotion_SalaDeEstar);
        }
		
        case "LONG_PRESSED": {
			logDebug("switches.rules", "Long pressed switch_sala_estar");
			handleLongPress.apply(hue_sala_estar_brightness);
        }
		
        case "LONG_RELEASED": {
        }
    }
end