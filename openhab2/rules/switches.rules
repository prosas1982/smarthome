val Functions$Function1<SwitchItem, Boolean> shouldTurnLightOn =  [SwitchItem lightBulbSwitch |
	
	var shouldTurnLightOn = (lightBulbSwitch.state == OFF);
	
	return shouldTurnLightOn;
]

val Functions$Function1<SwitchItem, Boolean> shouldTurnLightOff =  [SwitchItem lightBulbSwitch, SwitchItem toggleLightOnMotion |
	
	var shouldTurnLightOff = (lightBulbSwitch.state == ON) && 
							 (toggleLightOnMotion.state == OFF);
	
	return shouldTurnLightOff;
]

val Functions$Function1<SwitchItem, Boolean> shouldDisableMotionControl =  [SwitchItem lightBulbSwitch, SwitchItem toggleLightOnMotion |
	
	var shouldDisableMotionControl = (lightBulbSwitch.state == ON) && 
									 (toggleLightOnMotion.state == ON);
	
	return shouldDisableMotionControl;
]

val Functions$Function0<Void> handleQuartoPedroShortPress =  [ |

	if (shouldTurnLightOn(hue_quarto_pedro_switch))
	{
		sendCommand(hue_quarto_pedro_switch, ON);
		sendCommand(EnableLightOnMotion_QuartoPedro, OFF);
	}
	
	if (shouldTurnLightOff(hue_quarto_pedro_switch, EnableLightOnMotion_QuartoPedro))
	{
		sendCommand(hue_quarto_pedro_switch, OFF);
	}
	
	if (shouldDisableMotionControl(hue_quarto_pedro_switch, EnableLightOnMotion_QuartoPedro))
	{
		sendCommand(EnableLightOnMotion_QuartoPedro, OFF);
	}
]

val Functions$Function0<Void> handleSalaDeEstarShortPress =  [ |

	if (shouldTurnLightOn(hue_sala_estar_switch))
	{
		sendCommand(hue_sala_estar_switch, ON)
		sendCommand(EnableLightOnMotion_SalaDeEstar, OFF)
	}
	
	if (shouldTurnLightOff(hue_sala_estar_switch, EnableLightOnMotion_SalaDeEstar))
	{
		sendCommand(hue_sala_estar_switch, OFF)
	}
	
	if (shouldDisableMotionControl(hue_sala_estar_switch, EnableLightOnMotion_SalaDeEstar))
	{
		sendCommand(EnableLightOnMotion_SalaDeEstar, OFF)
	}
]

val Functions$Function0<Void> handleSalaDeJantarShortPress =  [ |

	if (shouldTurnLightOn(hue_sala_jantar_switch))
	{
		sendCommand(hue_sala_jantar_switch, ON)
		sendCommand(EnableLightOnMotion_SalaDeJantar, OFF)
	}
	
	if (shouldTurnLightOff(hue_sala_jantar_switch, EnableLightOnMotion_SalaDeJantar))
	{
		sendCommand(hue_sala_jantar_switch, OFF)
	}
	
	if (shouldDisableMotionControl(hue_sala_jantar_switch, EnableLightOnMotion_SalaDeJantar))
	{
		sendCommand(EnableLightOnMotion_SalaDeJantar, OFF)
	}
]

val Functions$Function4<SwitchItem, DimmerItem, StringItem, SwitchItem, Void> handleDoublePress =  [SwitchItem lightBulbSwitch, DimmerItem lightBulbDimmer, StringItem lightBulbAlert, SwitchItem toggleLightOnMotion |
			
	var shouldDisableMotionControl = (lightBulbSwitch.state == OFF);
	var shouldSetMaxBrightness = (lightBulbSwitch.state == ON);
	
	if (shouldDisableMotionControl)
	{
		sendCommand(lightBulbAlert, "SELECT");
		sendCommand(toggleLightOnMotion, OFF);
	}
	
	if (shouldSetMaxBrightness)
	{
		lightBulbDimmer.sendCommand(100);
	}
]

val Functions$Function1<DimmerItem, Void> handleLongPress =  [DimmerItem lightBulbDimmer |

	var newBrightness = (lightBulbDimmer.state as DecimalType) + 20;
			
	if (newBrightness > 100) {
		newBrightness = 20;
	}
	
	lightBulbDimmer.sendCommand(newBrightness);
]



rule "Hue - Quarto do Pedro"
when
    Channel "mihome:sensor_switch:158d00019de580:button" triggered
then
    var actionName = receivedEvent.getEvent()
	
    switch(actionName) {
	
        case "SHORT_PRESSED": {
			logInfo("switches.rules", "Short pressed switch_quarto_pedro");
			handleQuartoPedroShortPress.apply();
        }
		
        case "DOUBLE_PRESSED": {
			logInfo("switches.rules", "Double pressed switch_quarto_pedro");
			handleDoublePress.apply(hue_quarto_pedro_switch, hue_quarto_pedro_brightness, hue_quarto_pedro_alert, EnableLightOnMotion_QuartoPedro);
        }
		
        case "LONG_PRESSED": {
			logInfo("switches.rules", "Long pressed switch_quarto_pedro");
			handleLongPress.apply(hue_quarto_pedro_brightness);
        }
		
        case "LONG_RELEASED": {
        }
    }
end


rule "Hue - Sala de Jantar"
when
    Channel "mihome:sensor_switch:158d00019dcdda:button" triggered
then
    var actionName = receivedEvent.getEvent()
	
	switch(actionName) {
	
        case "SHORT_PRESSED": {
			logInfo("switches.rules", "Short pressed switch_sala_jantar");
			handleSalaDeJantarShortPress.apply();
        }
		
        case "DOUBLE_PRESSED": {
			logInfo("switches.rules", "Double pressed switch_sala_jantar");
			handleDoublePress.apply(hue_sala_jantar_switch, hue_sala_jantar_brightness, hue_sala_jantar_alert, EnableLightOnMotion_SalaDeJantar);
        }
		
        case "LONG_PRESSED": {
			logInfo("switches.rules", "Long pressed switch_sala_jantar");
			handleLongPress.apply(hue_sala_jantar_brightness);
        }
		
        case "LONG_RELEASED": {
        }
    }
end


rule "Hue - Sala de Estar"
when
    Channel "mihome:sensor_switch:158d00019dcc92:button" triggered
then
    var actionName = receivedEvent.getEvent()
	
    switch(actionName) {
	
        case "SHORT_PRESSED": {
			logInfo("switches.rules", "Short pressed switch_sala_estar");
			handleSalaDeEstarShortPress.apply();
        }
		
        case "DOUBLE_PRESSED": {
			logInfo("switches.rules", "Double pressed switch_sala_estar");
			handleDoublePress.apply(hue_sala_estar_switch, hue_sala_estar_brightness, hue_sala_estar_alert, EnableLightOnMotion_SalaDeEstar);
        }
		
        case "LONG_PRESSED": {
			logInfo("switches.rules", "Long pressed switch_sala_estar");
			handleLongPress.apply(hue_sala_estar_brightness);
        }
		
        case "LONG_RELEASED": {
        }
    }
end